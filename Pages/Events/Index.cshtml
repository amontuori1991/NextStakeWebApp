@page
@model NextStakeWebApp.Pages.Events.IndexModel
@{
    ViewData["Title"] = "Eventi";
}

<div class="container py-4">

    <!-- Barra data + frecce + Oggi -->
    <div class="d-flex align-items-center justify-content-between mb-3">
        <div class="h5 mb-0">Data: @Model.SelectedDate.ToString("dd/MM/yyyy")</div>
        <div class="d-flex gap-2">
            <a class="btn btn-outline-secondary"
               href="/Events?d=@Model.SelectedDate.AddDays(-1).ToString("yyyy-MM-dd")&fav=@(Model.OnlyFavorites ? 1 : 0)&country=@Model.SelectedCountryCode&q=@Model.Query"
               aria-label="Giorno precedente">←</a>

            <a class="btn btn-outline-primary"
               href="/Events?d=@DateOnly.FromDateTime(DateTime.UtcNow).ToString("yyyy-MM-dd")&fav=@(Model.OnlyFavorites ? 1 : 0)&country=@Model.SelectedCountryCode&q=@Model.Query">
                Oggi
            </a>

            <a class="btn btn-outline-secondary"
               href="/Events?d=@Model.SelectedDate.AddDays(1).ToString("yyyy-MM-dd")&fav=@(Model.OnlyFavorites ? 1 : 0)&country=@Model.SelectedCountryCode&q=@Model.Query"
               aria-label="Giorno successivo">→</a>
        </div>
    </div>

    <!-- Azioni globali -->
    <div class="d-flex flex-wrap gap-2 mb-3">
        <a class="btn @(Model.OnlyFavorites ? "btn-warning" : "btn-outline-warning")"
           href="/Events?d=@Model.SelectedDate.ToString("yyyy-MM-dd")&fav=@(Model.OnlyFavorites ? 0 : 1)&country=@Model.SelectedCountryCode&q=@Model.Query">
            ⭐ @(Model.OnlyFavorites ? "Mostra tutti" : "Vedi preferiti")
        </a>

        <!-- Collega al best=1 per mostrare i migliori pronostici -->
        <a class="btn btn-success"
           href="/Events?d=@Model.SelectedDate.ToString("yyyy-MM-dd")&fav=@(Model.OnlyFavorites ? 1 : 0)&country=@Model.SelectedCountryCode&q=@Model.Query&best=1"
           data-loading="best">
            Migliori pronostici
        </a>


        @if (Model.ShowBest)
        {
            <a class="btn btn-outline-secondary"
               href="/Events?d=@Model.SelectedDate.ToString("yyyy-MM-dd")&fav=@(Model.OnlyFavorites ? 1 : 0)&country=@Model.SelectedCountryCode&q=@Model.Query">
                Nascondi pronostici
            </a>
        }
    </div>

    <!-- Sezione: Migliori pronostici -->
    @if (Model.ShowBest)
    {
        <div class="card mb-4">
            <div class="card-header d-flex align-items-center justify-content-between">
                <div class="fw-semibold">🔥 Migliori pronostici</div>
                <small class="text-muted">Ordinati per data/ora</small>
            </div>
            <div class="card-body">
                @if (!string.IsNullOrWhiteSpace(Model.BestMessage))
                {
                    <div class="alert alert-info mb-3">@Model.BestMessage</div>
                }

                @if (Model.BestPicks?.Count > 0)
                {
                    <div class="table-responsive">
                        <table class="table table-sm align-middle">
                            <thead>
                                <tr>
                                    <th style="width:120px;">Data</th>
                                    <th>Evento</th>
                                    <th style="width:120px;">Azione</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var r in Model.BestPicks.OrderBy(x => x.EventDate))
                                {
                                    Model.AssetsByMatchId.TryGetValue(r.Id, out var assets);

                                    // Split "Home - Away" per inserire i loghi accanto ai nomi
                                    var parts = (r.Match ?? "").Split('-', 2, StringSplitOptions.TrimEntries);
                                    var homeName = parts.Length > 0 ? parts[0] : r.Match;
                                    var awayName = parts.Length > 1 ? parts[1] : "";

                                    <tr>
                                        <td>@r.EventDate.ToLocalTime().ToString("dd/MM HH:mm")</td>
                                        <td>
                                            <div class="d-flex align-items-center gap-2 flex-wrap">
                                                <!-- Home -->
                                                <div class="d-flex align-items-center gap-1">
                                                    @if (!string.IsNullOrWhiteSpace(assets?.HomeLogo))
                                                    {
                                                        <img src="@assets.HomeLogo" alt="home" style="height:18px;width:auto;" />
                                                    }
                                                    <span class="fw-semibold">@homeName</span>
                                                </div>

                                                <span class="mx-1">—</span>

                                                <!-- Away -->
                                                <div class="d-flex align-items-center gap-1">
                                                    @if (!string.IsNullOrWhiteSpace(assets?.AwayLogo))
                                                    {
                                                        <img src="@assets.AwayLogo" alt="away" style="height:18px;width:auto;" />
                                                    }
                                                    <span class="fw-semibold">@awayName</span>
                                                </div>

                                                <!-- Parentesi finali con country code + bandiera + competizione + logo lega -->
                                                <small class="text-muted ms-2" style="white-space:nowrap;">
                                                    (
                                                    @if (!string.IsNullOrWhiteSpace(assets?.LeagueFlag))
                                                    {
                                                        <img src="@assets.LeagueFlag" alt="flag" style="height:14px;width:auto;vertical-align:middle;margin-right:4px;" />
                                                    }
                                                    @r.Competition
                                                    @if (!string.IsNullOrWhiteSpace(assets?.LeagueLogo))
                                                    {
                                                        <img src="@assets.LeagueLogo" alt="league" style="height:16px;width:auto;vertical-align:middle;margin-left:6px;" />
                                                    }
                                                    )
                                                </small>

                                            </div>
                                        </td>
                                        <td>
                                            <a href="/Match/Details?id=@r.Id"
                                               target="_blank" rel="noopener"
                                               class="btn btn-sm btn-outline-primary">
                                                Apri evento ↗
                                            </a>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                }
                else
                {
                    <div class="alert alert-secondary mb-0">Nessun pronostico disponibile al momento.</div>
                }
            </div>
        </div>
    }



    <!-- Filtri: Nazione + Ricerca -->
    <form method="get" action="/Events" class="mb-3 row g-2 align-items-end">
        <div class="col-md-4">
            <label class="form-label">Filtro Nazione</label>
            <select class="form-select" name="country" onchange="this.form.submit()">
                <option value="">— Mostra tutte —</option>
                @foreach (var c in Model.AvailableCountries)
                {
                    <option value="@c.Code" selected="@(Model.SelectedCountryCode == c.Code)">
                        @c.Name (@c.Code)
                    </option>
                }
            </select>
        </div>
        <div class="col-md-4">
            <label class="form-label">Cerca (squadra o competizione)</label>
            <input class="form-control" type="text" name="q" value="@Model.Query" placeholder="Es: Serie A, Inter, Premier..." />
        </div>

        <!-- preserva data, preferiti e stato 'best' -->
        <input type="hidden" name="d" value="@Model.SelectedDate.ToString("yyyy-MM-dd")" />
        <input type="hidden" name="fav" value="@(Model.OnlyFavorites ? 1 : 0)" />
        @if (Model.ShowBest)
        {
            <input type="hidden" name="best" value="1" />
        }

        <div class="col-md-4">
            <button type="submit" class="btn btn-primary">Filtra</button>
        </div>
    </form>

    <!-- Lista partite raggruppate per competizione -->
    @if (Model.Rows.Count == 0)
    {
        <p>Nessuna partita trovata per il giorno selezionato.</p>
    }
    else
    {
        @foreach (var group in Model.Rows.GroupBy(r => new { r.LeagueId, r.LeagueName, r.LeagueLogo }))
        {
            <div class="mb-4">
                <div class="d-flex align-items-center gap-2 fw-semibold mb-2">
                    @if (!string.IsNullOrWhiteSpace(group.Key.LeagueLogo))
                    {
                        <img src="@group.Key.LeagueLogo" alt="logo" style="height:18px;width:auto;" />
                    }
                    <span>@group.Key.LeagueName</span>
                    <small class="text-muted">(#@group.Key.LeagueId)</small>
                </div>
                <div class="list-group">
                    @foreach (var r in group)
                    {
                        <div class="list-group-item d-flex justify-content-between align-items-center">
                            <a href="/Match/Details?id=@r.MatchId" class="text-decoration-none flex-grow-1">
                                <span>@r.Home — @r.Away</span>
                                <span class="text-muted ms-2">@r.KickoffUtc.ToLocalTime().ToString("HH:mm")</span>
                                @if (!string.IsNullOrWhiteSpace(r.CountryName))
                                {
                                    <span class="badge bg-light text-dark ms-2">@r.CountryName</span>
                                }
                            </a>

                            <!-- ⭐ Toggle preferito -->
                            <form method="post"
                                  action="/Events?handler=ToggleFavorite&matchId=@r.MatchId&d=@Model.SelectedDate.ToString("yyyy-MM-dd")&fav=@(Model.OnlyFavorites?1:0)&country=@Model.SelectedCountryCode&q=@Model.Query@(Model.ShowBest ? "&best=1" : "")"
                                  class="ms-3">
                                @Html.AntiForgeryToken()
                                <button type="submit"
                                        class="btn btn-sm @(Model.FavoriteMatchIds.Contains(r.MatchId) ? "btn-warning" : "btn-outline-secondary")"
                                        title="Aggiungi/rimuovi dai preferiti">
                                    ⭐
                                </button>
                            </form>
                        </div>
                    }
                </div>
            </div>
        }
    }
</div>

<style>
    .loading-overlay {
        position: fixed;
        inset: 0;
        background: rgba(255,255,255,0.85);
        display: flex;
        align-items: center;
        justify-content: center;
        z-index: 2000;
        backdrop-filter: blur(2px);
    }

    .loading-panel {
        background: #fff;
        border-radius: .75rem;
        box-shadow: 0 10px 30px rgba(0,0,0,.12);
        padding: 1.25rem 1.5rem;
        display: flex;
        align-items: center;
        gap: .75rem;
        max-width: 90vw;
    }
</style>

<div id="loadingOverlay" class="loading-overlay d-none" aria-hidden="true">
    <div class="loading-panel">
        <div class="spinner-border" role="status" aria-label="Caricamento"></div>
        <div class="fw-semibold">Carico i migliori pronostici…</div>
    </div>
</div>

<script>
    (function () {
        const overlay = document.getElementById('loadingOverlay');

        function showOverlay() {
            if (overlay) overlay.classList.remove('d-none');
        }

        // Mostra overlay quando si clicca sul bottone "Migliori pronostici"
        document.addEventListener('click', function (e) {
            const a = e.target.closest('a[data-loading="best"]');
            if (a) {
                showOverlay();
                // non preveniamo la navigazione: vogliamo solo feedback immediato
            }
        });

        // In caso la pagina tornasse dal bfcache o simili, assicurati che l’overlay sia nascosto
        window.addEventListener('pageshow', () => {
            if (overlay) overlay.classList.add('d-none');
        });
    })();
</script>
